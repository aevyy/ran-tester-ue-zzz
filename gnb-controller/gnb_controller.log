kill: (15537): No such process
kill: (15539): No such process
kill: (15746): No such process
kill: (15748): No such process
Namespace(gnb_config=PosixPath('/home/ntia/soft-t-ue/configs/gnb_zmq.yaml'))


==================================================
Open5GS Core Network |

==================================================
Open5GS Core Network /

==================================================
Open5GS Core Network -

==================================================
Open5GS Core Network \
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc

==================================================
Open5GS Core Network |
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc

==================================================
Open5GS Core Network /
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc

==================================================
Open5GS Core Network -
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc

==================================================
Open5GS Core Network \
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc

==================================================
Open5GS Core Network |
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb

==================================================
Open5GS Core Network /
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |

==================================================
Open5GS Core Network -
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |

==================================================
Open5GS Core Network \
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |

==================================================
Open5GS Core Network |
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |

==================================================
Open5GS Core Network /
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |

==================================================
Open5GS Core Network -
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |

==================================================
Open5GS Core Network \
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"

==================================================
Open5GS Core Network |
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"

==================================================
Open5GS Core Network /
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"

==================================================
Open5GS Core Network -
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!

==================================================
Open5GS Core Network \
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!

==================================================
Open5GS Core Network |
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!

==================================================
Open5GS Core Network /
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!

==================================================
Open5GS Core Network -
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |

==================================================
Open5GS Core Network \
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })

==================================================
Open5GS Core Network |
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })

==================================================
Open5GS Core Network /
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network -
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network \
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network |
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network /
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network -
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network \
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network |
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network /
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network -
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network \
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network |
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network /
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network -
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network \
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network |
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network /
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network -
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network \
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network |
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network /
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network -
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network \
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network |
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network /
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network -
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network \
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network |
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network /
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network -
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network \
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network |
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network /
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network -
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network \
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network |
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network /
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network -
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network \
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network |
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network /
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network -
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network \
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network |
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network /
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network -
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network \
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network |
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network /
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network -
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network \
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network |
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network /
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network -
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network \
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network |
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network /
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network -
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network \
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network |
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network /
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network -
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network \
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network |
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network /
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network -
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network \
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network |
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network /
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network -
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network \
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network |
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network /
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network -
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network \
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network |
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network /
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network -
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network \
#0 building with "default" instance using docker driver

#1 [5gc internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.11kB done
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)
#1 WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 88)
#1 DONE 0.0s

#2 [5gc internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [5gc internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [5gc base 1/8] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [5gc internal] load build context
#5 transferring context: 142B done
#5 DONE 0.0s

#6 [5gc base 6/8] RUN git clone --depth 1 --branch $(cat ./open5gsversion) https://github.com/open5gs/open5gs open5gs    && cd open5gs     && meson build --prefix=`pwd`/install     && ninja -C build     && cd build     && ninja install
#6 CACHED

#7 [5gc base 8/8] RUN python3 -m pip install pymongo click pyroute2 ipaddress python-iptables
#7 CACHED

#8 [5gc open5gs 2/3] COPY open5gs-5gc.yml open5gs-5gc.yml.in
#8 CACHED

#9 [5gc base 2/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt install -y software-properties-common     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [5gc open5gs 1/3] WORKDIR /open5gs
#10 CACHED

#11 [5gc base 7/8] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && cd open5gs/webui     && npm ci --no-optional
#11 CACHED

#12 [5gc base 5/8] RUN echo v2.6.1 > ./open5gsversion
#12 CACHED

#13 [5gc base 3/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y     python3-pip     python3-setuptools     python3-wheel     ninja-build     build-essential     flex     bison     git     libsctp-dev     libgnutls28-dev     libgcrypt-dev     libssl-dev     libidn11-dev     libmongoc-dev     libbson-dev     libyaml-dev     libnghttp2-dev     libmicrohttpd-dev     libcurl4-gnutls-dev     libnghttp2-dev     libtins-dev     meson     curl     gettext     gdb     iproute2     iptables     iputils-ping     netcat     iperf     iperf3     libtalloc-dev     cmake     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [5gc base 4/8] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends wget gnupg     && wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add     && . /etc/os-release     && echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $UBUNTU_CODENAME/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list     && DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends mongodb-org     && apt-get autoremove && apt-get clean
#14 CACHED

#15 [5gc open5gs 3/3] COPY open5gs_entrypoint.sh add_users.py setup_tun.py subscriber_db.cs[v] ./
#15 CACHED

#16 [5gc] exporting to image
#16 exporting layers done
#16 writing image sha256:ee8de259409862cbdbbe14f0ab6a66e0638865c17bc9da48b24a0e224f8f4f25 done
#16 naming to docker.io/library/docker-5gc done
#16 DONE 0.0s

#17 [5gc] resolving provenance for metadata file
#17 DONE 0.0s
Attaching to open5gs_5gc
open5gs_5gc  | nc: connect to 127.0.0.1 port 27017 (tcp) failed: Connection refused
open5gs_5gc  | waiting for mongodb
open5gs_5gc  | {"t":{"$date":"2024-08-22T19:23:15.456Z"},"s":"I",  "c":"CONTROL",  "id":20697,   "ctx":"-","msg":"Renamed existing log file","attr":{"oldLogPath":"/tmp/mongodb.log","newLogPath":"/tmp/mongodb.log.2024-08-22T19-23-15"}}
open5gs_5gc  |
open5gs_5gc  | > open5gs@2.6.1 dev
open5gs_5gc  | > node server/index.js
open5gs_5gc  |
open5gs_5gc  | > Using external babel configuration
open5gs_5gc  | > Location: "/open5gs/webui/.babelrc"
open5gs_5gc  | Connection to 127.0.0.1 27017 port [tcp/*] succeeded!
open5gs_5gc  |  DONE  Compiled successfully in 622ms7:23:16 PM
open5gs_5gc  |
open5gs_5gc  | [0;36mMongoose:[0m accounts.count({}, {})
open5gs_5gc  | > Ready on http://201160b17007:3000
open5gs_5gc  | [0;36mMongoose:[0m subscribers.createIndex({ imsi: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.createIndex({ username: [33m1[39m }, { unique: [33mtrue[39m, background: [33mtrue[39m })
open5gs_5gc  | [0;36mMongoose:[0m accounts.findOne({ [32m'$or'[39m: [ { username: [32m'admin'[39m } ] }, { projection: { hash: [33m0[39m, salt: [33m0[39m } })

==================================================
Open5GS Core Network |Traceback (most recent call last):
  File "/home/ntia/soft-t-ue/gnb-controller/gnb_controller/gnb.py", line 93, in <module>
    rc = main()
  File "/home/ntia/soft-t-ue/gnb-controller/gnb_controller/gnb.py", line 74, in main
    controller.start(str(args.gnb_config))
  File "/home/ntia/soft-t-ue/gnb-controller/gnb_controller/gnb.py", line 25, in start
    self.spinner_loading(self.core_handle)
  File "/home/ntia/soft-t-ue/gnb-controller/gnb_controller/gnb.py", line 52, in spinner_loading
    time.sleep(0.1)
KeyboardInterrupt
