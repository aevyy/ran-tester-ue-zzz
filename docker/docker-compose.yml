services:
  controller:
    image: ghcr.io/oran-testing/controller
    volumes:
      # Pass in the docker soket for starting rtue
      - /var/run/docker.sock:/var/run/docker.sock
      # Allow results writing to host machine
      - /tmp:/tmp
      # Allow access to system level docker configuration
      - /root/.docker:/root/.docker
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
      - CONFIG=${DOCKER_CONTROLLER_INIT_CONFIG:-configs/basic_ue_zmq.yaml}
    privileged: true
    build:
      context: controller
    env_file:
      - .env
    depends_on:
      - influxdb
    networks:
      metrics:
        ipv4_address: 172.19.1.7

  influxdb:
    container_name: influxdb
    image: influxdb:${DOCKER_INFLUXDB_VERSION}
    volumes:
      # Enable writing data backups to the host machine
      - /tmp/:/tmp/host/
      - influxdb-storage:/var/lib/influxdb2:rw
    env_file:
      - .env
    #restart: on-failure:10
    # Uncomment port section to access InfluxDB from outside the docker network
    ports:
      - 8086:${DOCKER_INFLUXDB_INIT_PORT}
    networks:
      metrics:
        ipv4_address: 172.19.1.5

  grafana:
    image: rtu/grafana
    build:
      context: grafana
    volumes:
      - grafana-storage:/var/lib/grafana:rw
    env_file:
      - .env
    depends_on:
      - influxdb
    ports:
      - 3300:${GRAFANA_PORT}
    networks:
      metrics:
        ipv4_address: 172.19.1.6


  rtue:
    image: ghcr.io/oran-testing/rtue
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        OS_VERSION: "24.04"
    privileged: true
    env_file:
      - .env
    cap_add:
      - SYS_NICE
      - CAP_SYS_PTRACE
    volumes:
      # Access USB to use some SDRs
      - /dev/bus/usb/:/dev/bus/usb/
      # Access UHD images
      - ${UHD_IMAGES_DIR}:${UHD_IMAGES_DIR}
      # Store logs in /tmp
      - /tmp:/tmp

    environment:
      - CONFIG=${DOCKER_RTUE_INIT_CONFIG:-configs/zmq/ue_zmq_docker.conf}
      - ARGS=${DOCKER_RTUE_INIT_ARGS}

    networks:
      -  metrics


  jammer:
    image: ghcr.io/oran-testing/jammer
    build:
      context: ../jammer
      dockerfile: Dockerfile.alpine
      args:
        OS_VERSION: "3.18"
        UHD_IMAGES_DIR: ${UHD_IMAGES_DIR}
    privileged: true
    env_file:
      - .env
    cap_add:
      - SYS_NICE
      - CAP_SYS_PTRACE
    volumes:
      # Access USB to use some SDRs
      - /dev/bus/usb/:/dev/bus/usb/
      # Access UHD images
      - ${UHD_IMAGES_DIR}:${UHD_IMAGES_DIR}

  uuagent:
    image: ghcr.io/oran-testing/uu-agent
    build:
      context: ../uu-agent
      dockerfile: Dockerfile.alpine
      args:
        OS_VERSION: "3.18"
    privileged: true
    env_file:
      - .env
    cap_add:
      - SYS_NICE
      - CAP_SYS_PTRACE
    volumes:
      # Access USB to use some SDRs
      - /dev/bus/usb/:/dev/bus/usb/
      # Access UHD images
      - ${UHD_IMAGES_DIR}:${UHD_IMAGES_DIR}

  sniffer:
    image: ghcr.io/oran-testing/5g-sniffer
    build:
      context: ../5g-sniffer
      dockerfile: Dockerfile
    privileged: true
    env_file:
      .env
    cap_add:
      - SYS_NICE
      - CAP_SYS_PTRACE
    volumes:
      # Access USB to use some SDRs
      - /dev/bus/usb/:/dev/bus/usb/
      # Access UHD images
      - ${UHD_IMAGES_DIR}:${UHD_IMAGES_DIR}


volumes:
  ue-storage:
  influxdb-storage:
  grafana-storage:

networks:
  metrics:
    ipam:
      driver: default
      config:
        - subnet: 172.19.1.0/24
