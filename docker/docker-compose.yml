services:
  controller:
    container_name: controller
    image: controller
    volumes:
      # Pass in the docker soket for starting rtue
      - /var/run/docker.sock:/var/run/docker.sock
      # Allow results writing to host machine
      - /tmp:/tmp
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
      - CONFIG=${DOCKER_CONTROLLER_INIT_CONFIG:-configs/basic_ue_zmq.yaml}
    privileged: true
    build:
      context: controller
    env_file:
      - .env
    depends_on:
      - influxdb
    networks:
      metrics:
        ipv4_address: 172.19.1.7

  influxdb:
    container_name: influxdb
    image: influxdb:${DOCKER_INFLUXDB_VERSION}
    volumes:
      # Enable writing data backups to the host machine
      - /tmp/:/tmp/host/
      - influxdb-storage:/var/lib/influxdb2:rw
    env_file:
      - .env
    restart: on-failure:10
    # Uncomment port section to access InfluxDB from outside the docker network
    ports:
      - 8086:${DOCKER_INFLUXDB_INIT_PORT}
    networks:
      metrics:
        ipv4_address: 172.19.1.5

  grafana:
    container_name: grafana
    image: rtu/grafana
    build:
      context: grafana
    volumes:
      - grafana-storage:/var/lib/grafana:rw
    env_file:
      - .env
    depends_on:
      - influxdb
    ports:
      - 3300:${GRAFANA_PORT}
    networks:
      metrics:
        ipv4_address: 172.19.1.6


  rtue:
    container_name: rtue
    image: rtu/ue
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        OS_VERSION: "24.04"
    privileged: true
    env_file:
      - .env
    cap_add:
      - SYS_NICE
      - CAP_SYS_PTRACE
    volumes:
      # Access USB to use some SDRs
      - /dev/bus/usb/:/dev/bus/usb/
      # Access UHD images
      - /usr/share/uhd/images:/usr/share/uhd/images
      # Store logs in /tmp
      - /tmp:/tmp

    environment:
      - CONFIG=${DOCKER_RTUE_INIT_CONFIG:-configs/zmq/ue_zmq_docker.conf}
      - ARGS=${DOCKER_RTUE_INIT_ARGS}

    networks:
      -  docker_rtue_network
      -  metrics


  jammer:
    container_name: jammer
    image: rtu/jammer
    build:
      context: ../jammer
      dockerfile: Dockerfile
      args:
        OS_VERSION: "24.04"
    privileged: true
    env_file:
      - .env
    cap_add:
      - SYS_NICE
      - CAP_SYS_PTRACE
    volumes:
      # Access USB to use some SDRs
      - /dev/bus/usb/:/dev/bus/usb/
      - /dev/snd:/dev/snd
      # Access UHD images
      - /usr/share/uhd/images:/usr/share/uhd/images
      - /usr/local/share/uhd/images:/usr/share/uhd/images

  uuagent:
    container_name: uuagent
    image: stu/uuagent
    build:
      context: ../uu-agent
      dockerfile: Dockerfile
      args:
        OS_VERSION: "24.04"
    privileged: true
    env_file:
      - .env
    cap_add:
      - SYS_NICE
      - CAP_SYS_PTRACE
    volumes:
      # Access USB to use some SDRs
      - /dev/bus/usb/:/dev/bus/usb/
      # Access UHD images
      - /usr/share/uhd/images:/usr/share/uhd/images
      - /usr/local/share/uhd/images:/usr/local/share/uhd/images





volumes:
  ue-storage:
  influxdb-storage:
  grafana-storage:

networks:
  docker_rtue_network:
    external: true

  metrics:
    ipam:
      driver: default
      config:
        - subnet: 172.19.1.0/24
